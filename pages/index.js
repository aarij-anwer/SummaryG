import { useState, useEffect } from "react";
import axios from "axios";
import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { PrismaClient } from '@prisma/client'
import Header from './components/Header'
import Navigation from './components/Navigation'
import Search from './components/Search'
import RecentSearches from './components/RecentSearches'
import Title from './components/Title'
import Summary from './components/Summary'
import Review from './components/Review'
import OneWordReview from './components/OneWordReview'
import SimilarContent from './components/SimilarContent'
import Loading from './components/Loading';
import InitialLoad from './components/InitialLoad';
import Material from './material';

const inter = Inter({ subsets: ['latin'] })

export default function Home({ results }) {
  //useState initialization
  const [searchState, setSearchState] = useState("articles");
  const [searchIdState, setSearchIdState] = useState();
  const [title, setTitle] = useState();
  const [summary, setSummary] = useState();
  const [review, setReview] = useState();
  const [oneWordReview, setOneWordReview] = useState();
  const [similarContent, setSimilarContent] = useState();
  const [recentSearches, setRecentSearches] = useState();
  const [guruCognating, setGuruCognating] = useState(false);


  //useEffect initialization
  useEffect(() => {
    axios.get(`/api/searchAPI/?searchIdState=${searchIdState}`)
      .then(res => {
        if (res.data && res.data.content && res.data.content[0]) {
          setTitle(res.data.content[0].title);
          setSummary(res.data.content[0].summary);
          setReview(res.data.content[0].review);
          setOneWordReview(res.data.content[0].oneWordReview);
          setSimilarContent(res.data.content[0].similar);
        } else {
          console.log('Response data structure is not as expected.')
        }
      })
      .catch(error => {
        console.error('Fetching data failed: ', error);
        if (error.response) {
          // The request was made and the server responded with a status code
          // that falls out of the range of 2xx
          console.log(error.response.data);
          console.log(error.response.status);
          console.log(error.response.headers);
        }
      });
  }, [searchIdState]);

  //useEffect initialization for recent searches
  useEffect(() => {
    axios.get('api/recentSearchAPI')
      .then(res => {
        setRecentSearches(res.data.recentSearches);
      })
      .catch(error => {
        console.error('Fetching data failed: ', error);
      });
  }, [searchIdState]);


  return (
    <>
      <Head>
        <title>Summary Guru</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />

        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link href="https://fonts.googleapis.com/css2?family=Bruno+Ace+SC&display=swap" rel="stylesheet"></link>

      </Head>
      <main className={styles.main}>
        <Loading
          guruCognating={guruCognating}
        />
        <Header/>
        <Navigation
          onSearchTypeChange={setSearchState}
          searchType={searchState}
        />
        <Search
          searchType={searchState}
          onSubmit={setSearchIdState} // setSearchIDState will handle the submitted data
          setGuruCognating={setGuruCognating}
        />
        <InitialLoad 
          searchIdState={searchIdState}
        />
        <div className={styles.content}>
          <div className={styles.leftside}>
          </div>
          <div className={styles.center + ' ' + (!searchIdState ? styles.hidden : '')}>
            <Title title={title} />
            <Summary summary={summary} />
            <Review review={review} />
          </div>
          <div className={styles.rightside + ' ' + (!searchIdState ? styles.hidden : '')}>
            <OneWordReview oneWordReview={oneWordReview} />
            <SimilarContent similarContent={similarContent} />
          </div>
        </div>
        <Material name="Recent Searches" recentSearches={recentSearches} setSearchIdState={setSearchIdState}/>
      </main>
    </>
  )
}